{"version":3,"sources":["components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Container","children","ContactForm","state","name","number","nameId","uuidv4","numberId","handleInputValues","evt","currentTarget","value","setState","submitForm","preventDefault","props","onSubmit","id","resetForm","this","htmlFor","type","placeholder","pattern","onChange","title","required","React","Component","ContactList","contacts","onRemoveContact","map","onClick","Filter","searchId","App","filter","getContacts","contact","toLocaleLowerCase","includes","toLowerCase","addContact","newContact","some","alert","removeContact","data","prevState","changeFilterValue","target","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d36baea.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Container = ({children}) => {\n  return (\n    <div>\n      {children}\n    </div>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleInputValues = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = (evt) => {\n    evt.preventDefault();\n    this.props.onSubmit({\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <label htmlFor={this.nameId}>Name</label>\n        <input\n          id={this.nameId}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={this.state.name}\n          onChange={this.handleInputValues}\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <label htmlFor={this.numberId}>Number</label>\n        <input\n          id={this.numberId}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter telephone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={this.state.number}\n          onChange={this.handleInputValues}\n          required\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name} : {number}\r\n\r\n          <button type=\"button\" onClick={() => onRemoveContact(id)}>\r\n            Remove\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const Filter = ({ value, onChange }) => {\n  const searchId = uuidv4();\n  return (\n    <div>\n      <label htmlFor={searchId}>Find contacts by name</label>\n      <input id={searchId} type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Container } from \"./components/Container/Container\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (newContact) => {\n    if (\n      this.state.contacts.some(\n        (contact) =>\n          contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(\n        \"You have contact with this name, please remove old contact and create new\"\n      );\n      return;\n    }\n\n    this.setState({\n      contacts: [newContact, ...this.state.contacts],\n    });\n  };\n\n  removeContact = (data) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== data),\n    }));\n  };\n\n  changeFilterValue = (evt) => {\n    this.setState({\n      filter: evt.target.value,\n    });\n  };\n\n  render() {\n    const contacts = this.getContacts();\n\n    return (\n      <Container>\n        <h1>PhoneBook</h1>\n        <h2>Add contact</h2>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        {this.state.contacts.length > 0 && (\n          <Filter value={this.state.filter} onChange={this.changeFilterValue} />\n        )}\n\n        <ContactList contacts={contacts} onRemoveContact={this.removeContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
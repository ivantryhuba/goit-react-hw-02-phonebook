{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/Input/Input.styles.js","components/Input/Input.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styles.js","components/ContactList/ContactList.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","LabelStyled","label","InputStyled","input","Input","id","type","name","placeholder","pattern","value","onChange","title","required","htmlFor","defaultProps","FormStyled","form","SubmitButtonStyled","button","ContactForm","state","number","handleInputValues","evt","currentTarget","setState","submitForm","preventDefault","props","onSubmit","uuidv4","resetForm","this","React","Component","ContactListStyled","ul","ContactItemStyled","li","RemoveBtnStyled","ContactList","contacts","onRemoveContact","map","onClick","NotificationStyled","p","Notification","text","H1Styled","h1","H2Styled","h2","App","filter","getContacts","contact","toLocaleLowerCase","includes","toLowerCase","addContact","newContact","some","alert","removeContact","data","prevState","changeFilterValue","target","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8980319.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const ContainerStyled = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n\r\n\r\n  width: 500px;\r\n  padding: 10px;\r\n\r\n  border: 2px solid red;\r\n  border-radius: 20px;\r\n`;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ContainerStyled } from \"./Container.styles\";\n\nexport const Container = ({children}) => {\n  return (\n    <ContainerStyled>\n      {children}\n    </ContainerStyled>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const LabelStyled = styled.label`\r\ndisplay: block;\r\n  margin-bottom: 10px;\r\nfont-size: 20px;\r\nfont-weight: 700;\r\ncolor: black;\r\n`;\r\n\r\nexport const InputStyled = styled.input`\r\nwidth: 250px;\r\nmargin-bottom: 15px;\r\npadding: 10px;\r\nborder: 2px solid green;\r\nborder-radius: 10px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { LabelStyled, InputStyled } from \"./Input.styles\";\r\n\r\nexport const Input = ({\r\n  id,\r\n  type,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  pattern,\r\n  value,\r\n  onChange,\r\n  title,\r\n  required,\r\n}) => {\r\n  return (\r\n    <>\r\n      <LabelStyled htmlFor={id}>{label}</LabelStyled>\r\n      <InputStyled\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        pattern={pattern}\r\n        value={value}\r\n        onChange={onChange}\r\n        title={title}\r\n        required={required}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: \"text\",\r\n  placeholder: \"\",\r\n  pattern: \"\",\r\n  title: \"\",\r\n  required:false\r\n};\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  required: PropTypes.bool,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FormStyled = styled.form`\r\nmargin-bottom: 20px;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const SubmitButtonStyled = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 150px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 15px;\r\n\r\n  font-size: 15px;\r\n  font-weight: 700;\r\n\r\n\r\n  background-color: yellow;\r\n  border: 2px solid green;\r\n  border-radius: 20px;\r\n`;\r\n","import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Input } from \"../Input/Input\";\nimport { FormStyled, SubmitButtonStyled } from \"./ContactForm.styles\";\n\nexport class ContactForm extends React.Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputValues = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = (evt) => {\n    evt.preventDefault();\n    this.props.onSubmit({\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    });\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <FormStyled onSubmit={this.submitForm}>\n        <Input\n          id={uuidv4()}\n          type={\"text\"}\n          label = {\"Name\"}\n          name={\"name\"}\n          placeholder={\"Jason Born\"}\n          pattern={\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"}\n          value={this.state.name}\n          onChange={this.handleInputValues}\n          title={\n            \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          }\n          required={true}\n        />\n\n        <Input\n          id={uuidv4()}\n          type={\"tel\"}\n          label = {\"Number\"}\n          name={\"number\"}\n          placeholder={\"+44-787-123-45-67\"}\n          pattern={\n            \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\"\n          }\n          value={this.state.number}\n          onChange={this.handleInputValues}\n          title={\n            \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          }\n          required={true}\n        />\n\n        <SubmitButtonStyled type=\"submit\">Add contact</SubmitButtonStyled>\n      </FormStyled>\n    );\n  }\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactListStyled = styled.ul`\r\nwidth: 100%;\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const ContactItemStyled = styled.li`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: black;\r\n`;\r\n\r\nexport const RemoveBtnStyled = styled.button`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n\r\nwidth: 75px;\r\nmargin-left: auto;\r\npadding: 5px;\r\n\r\nfont-size: 15px;\r\nfont-weight: 500;\r\n\r\nbackground-color: turquoise;\r\nborder: 2px solid orangered;\r\nborder-radius: 5px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  ContactListStyled,\r\n  ContactItemStyled,\r\n  RemoveBtnStyled,\r\n} from \"./ContactList.styles\";\r\n\r\nexport const ContactList = ({ contacts, onRemoveContact }) => {\r\n  return (\r\n    <ContactListStyled>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItemStyled key={id}>\r\n          {name} : {number}\r\n          <RemoveBtnStyled type=\"button\" onClick={() => onRemoveContact(id)}>\r\n            Remove\r\n          </RemoveBtnStyled>\r\n        </ContactItemStyled>\r\n      ))}\r\n    </ContactListStyled>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const NotificationStyled = styled.p`\r\nmargin-top: 0;\r\nmargin-bottom: 0;\r\npadding: 10px;\r\nfont-size: 20px;\r\nfont-weight: 500;\r\ncolor: orange;\r\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationStyled } from \"./Notification.styles\";\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const H1Styled = styled.h1`\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n\r\nexport const H2Styled = styled.h2`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-size: 30px;\r\n  font-weight: 700;\r\n  color: black;\r\n`;\r\n","import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { Container } from \"./components/Container/Container\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Notification } from \"./components/Notification/Notification\";\nimport { Input } from \"./components/Input/Input\";\n\nimport {H1Styled, H2Styled} from \"./App.styles\"\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  getContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (newContact) => {\n    if (\n      this.state.contacts.some(\n        (contact) =>\n          contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(\n        \"You have contact with this name, please remove old contact and create new\"\n      );\n      return;\n    }\n\n    this.setState({\n      contacts: [newContact, ...this.state.contacts],\n    });\n  };\n\n  removeContact = (data) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== data),\n    }));\n  };\n\n  changeFilterValue = (evt) => {\n    this.setState({\n      filter: evt.target.value,\n    });\n  };\n\n  render() {\n    const contacts = this.getContacts();\n\n    return (\n      <Container>\n        <H1Styled>PhoneBook</H1Styled>\n        <H2Styled>Add contact</H2Styled>\n        <ContactForm onSubmit={this.addContact} />\n\n        <H2Styled>Contacts</H2Styled>\n        {this.state.contacts.length > 0 ? (\n          <>\n          {/* Filter */}\n            <Input\n              id={uuidv4()}\n              label={\"Find contacts by name\"}\n              placeholder={\"Boris Britva\"}\n              value={this.state.filter}\n              onChange={this.changeFilterValue}\n            />\n\n            <ContactList\n              contacts={contacts}\n              onRemoveContact={this.removeContact}\n            />\n          </>\n        ) : (\n          <Notification text={\"You don`t have any contacts\"} />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}